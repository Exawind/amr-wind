#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#            SIMULATION STOP            #
#.......................................#
time.stop_time               =   22000.0     # Max (simulated) time to evolve
time.max_step                =   10          # Max number of time steps

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#         TIME STEP COMPUTATION         #
#.......................................#
time.fixed_dt         =   0.5        # Use this constant dt if > 0
time.cfl              =   0.95         # CFL factor

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#            INPUT AND OUTPUT           #
#.......................................#
time.plot_interval            =  10       # Steps between plot files
time.checkpoint_interval      =  5       # Steps between checkpoint files

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#               PHYSICS                 #
#.......................................#
incflo.gravity          =   0.  0. -9.81  # Gravitational force (3D)
incflo.density             = 1.0          # Reference density

io.derived_outputs = mag_vorticity "components(velocity,0,1)" "grad(temperature)"

incflo.use_godunov = 1
incflo.godunov_type = ppm
incflo.diffusion_type = 2
transport.viscosity = 1.0e-5
transport.laminar_prandtl = 0.7
transport.turbulent_prandtl = 0.3333
turbulence.model = Smagorinsky
Smagorinsky_coeffs.Cs = 0.135


incflo.physics = ABL
ICNS.source_terms = BoussinesqBuoyancy CoriolisForcing ABLForcing
BoussinesqBuoyancy.reference_temperature = 300.0
ABL.reference_temperature = 300.0
CoriolisForcing.latitude = 41.3
ABLForcing.abl_forcing_height = 90

incflo.velocity = 6.128355544951824  5.142300877492314 0.0

ABL.temperature_heights = 650.0 750.0 1000.0
ABL.temperature_values = 300.0 308.0 308.75

ABL.kappa = .41
ABL.surface_roughness_z0 = 0.15

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#        ADAPTIVE MESH REFINEMENT       #
#.......................................#
amr.n_cell              = 48 48 48    # Grid cells at coarsest AMRlevel
amr.max_level           = 1           # Max AMR level in hierarchy
amr.max_grid_size       = 8

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#              GEOMETRY                 #
#.......................................#
geometry.prob_lo        =   0.       0.     0.  # Lo corner coordinates
geometry.prob_hi        =   1000.  1000.  1000.  # Hi corner coordinates
geometry.is_periodic    =   1   1   0   # Periodicity x y z (0/1)

# Boundary conditions
zlo.type =   "wall_model"

zhi.type =   "slip_wall"
zhi.temperature_type = "fixed_gradient"
zhi.temperature = 0.003 # tracer is used to specify potential temperature gradient

tagging.labels = box
tagging.box.type = GeometryRefinement
tagging.box.shapes = b0
tagging.box.level  = 0

tagging.box.b0.type = box
tagging.box.b0.origin = 400.0 400.0 400.0
tagging.box.b0.xaxis = 100.0 0.0 0.0
tagging.box.b0.yaxis = 0.0 100.0 0.0
tagging.box.b0.zaxis = 0.0 0.0 100.0

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#              VERBOSITY                #
#.......................................#
incflo.verbose          =   0          # incflo_level

#¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨#
#               SAMPLING                #
#.......................................#
incflo.post_processing       = volume_sampling volume_sampling2 probe_sampling plane_sampling line_sampling
volume_sampling.output_frequency    = 1
volume_sampling.output_format       = native
volume_sampling.fields              = velocity
volume_sampling.int_fields          = mask_cell
volume_sampling.derived_fields      = mag_vorticity "components(velocity,0,1)" "grad(temperature)" "grad(density)"
volume_sampling.labels              = volume1 volume2
volume_sampling.volume1.type        = VolumeSampler
volume_sampling.volume1.lo          = 200.0 200.0 200.0
volume_sampling.volume1.hi          = 500.0 500.0 500.0
volume_sampling.volume1.num_points  = 30 10 10
volume_sampling.volume2.type        = VolumeSampler
volume_sampling.volume2.lo          = 205.0 200.0 200.0
volume_sampling.volume2.hi          = 505.0 500.0 500.0
volume_sampling.volume2.num_points  = 30 10 10

volume_sampling2.output_frequency    = 1
volume_sampling2.output_format       = native
volume_sampling2.fields              = velocity
volume_sampling2.int_fields          = mask_cell
volume_sampling2.derived_fields      = q_criterion_nondim
volume_sampling2.labels              = volume1
volume_sampling2.volume1.type        = VolumeSampler
volume_sampling2.volume1.lo          = 20.0 20.0 20.0
volume_sampling2.volume1.hi          = 50.0 50.0 50.0
volume_sampling2.volume1.num_points  = 5 5 5

probe_sampling.output_frequency    = 1
probe_sampling.output_format       = native
probe_sampling.fields              = velocity
probe_sampling.int_fields          = mask_cell
probe_sampling.labels              = probe1
probe_sampling.probe1.type         = ProbeSampler
probe_sampling.probe1.probe_location_file = "probe_locations.txt"
probe_sampling.probe1.offset_vector = 0.0 1.0 1.0
probe_sampling.probe1.offsets   = 0.0 200.0 400.0 600.0

plane_sampling.output_frequency     = 1
plane_sampling.output_format        = native
plane_sampling.fields               = velocity
plane_sampling.labels               = plane1 plane2
plane_sampling.plane1.type          = PlaneSampler
plane_sampling.plane1.axis1         = 400.0 0.0 0.0
plane_sampling.plane1.axis2         = 0.0 0.0 400.0
plane_sampling.plane1.origin        = 200.0 200.0 200.0
plane_sampling.plane1.num_points    = 10 10
plane_sampling.plane1.offset_vector = 0.0 1.0 1.0
plane_sampling.plane1.offsets       = 0.0 20.0 30.0 200.0

plane_sampling.plane2.type          = PlaneSampler
plane_sampling.plane2.axis1         = 1000.0 0.0 0.0
plane_sampling.plane2.axis2         = 0.0 1000.0 0.0
plane_sampling.plane2.origin        = 0.0 0.0 500.0
plane_sampling.plane2.num_points    = 10 10
plane_sampling.plane2.offset_vector = 0.0 0.0 1.0
plane_sampling.plane2.offsets       = 0.0 499.0

line_sampling.output_frequency     = 1
line_sampling.output_format        = native
line_sampling.fields               = velocity
line_sampling.labels               = line1
line_sampling.line1.type           = LineSampler
line_sampling.line1.num_points     = 21
line_sampling.line1.start          = 750.0 250.0 10.0
line_sampling.line1.end            = 750.0 250.0 910.0
