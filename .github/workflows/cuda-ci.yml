name: AMR-Wind CUDA CI

on:
  push:
    branches:
      - main
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - 'Dockerfile'
      - '.github/workflows/cuda-ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - 'Dockerfile'
      - '.github/workflows/cuda-ci.yml'

jobs:
  cuda-build:
    runs-on: ubuntu-18.04
    name: CUDA v${{matrix.cuda_ver}}
    strategy:
      matrix:
        cuda_pkg: [11-0, 10-2, 10-1, 10-0]
        include:
          - cuda_ver: "11.0"
            cuda_pkg: 11-0
            cuda_extra: libcurand-dev-11-0 cuda-cupti-dev-11-0
          - cuda_ver: "10.2"
            cuda_pkg: 10-2
            cuda_extra: cuda-curand-dev-10-2 cuda-cupti-dev-10-2
          - cuda_ver: "10.1"
            cuda_pkg: 10-1
            cuda_extra: cuda-curand-dev-10-1 cuda-cupti-10-1
          - cuda_ver: "10.0"
            cuda_pkg: 10-0
            cuda_extra: cuda-curand-dev-10-0 cuda-cupti-10-0
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Prepare CUDA environment
        run: |
          export DEBIAN_FRONTEND=noninteractive
          wget -q -O - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | sudo apt-key add -
          echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" | sudo tee /etc/apt/sources.list.d/cuda.list
          echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" | sudo tee /etc/apt/sources.list.d/nvidia-ml.list
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
              libopenmpi-dev cuda-command-line-tools-${{matrix.cuda_pkg}} cuda-compiler-${{matrix.cuda_pkg}} cuda-minimal-build-${{matrix.cuda_pkg}} cuda-nvml-dev-${{matrix.cuda_pkg}} cuda-nvtx-${{matrix.cuda_pkg}} ${{matrix.cuda_extra}}
      - name: Configure and build
        run: |
          export PATH=/usr/local/nvidia/bin:/usr/local/cuda-${{matrix.cuda_ver}}/bin:${PATH}
          export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-${{matrix.cuda_ver}}/lib:${LD_LIBRARY_PATH}
          cmake -Bbuild-${{matrix.cuda_pkg}} \
            -DAMR_WIND_ENABLE_MPI=OFF \
            -DAMR_WIND_ENABLE_CUDA=ON \
            -DAMReX_CUDA_ERROR_CAPTURE_THIS:BOOL=ON \
            -DAMReX_CUDA_ARCH=Volta .
          cmake --build build-${{matrix.cuda_pkg}} -- -j $(nproc)
