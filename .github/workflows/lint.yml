name: AMR-Wind Lint

on:
  push:
    branches: [development]
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'test/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/lint.yml'
  pull_request:
    branches: [development]
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'test/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/lint.yml'

jobs:
  Lint:
    runs-on: macos-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Dependencies
        run: brew install cppcheck
      - name: Configure
        run: |
          echo "::add-matcher::.github/problem-matchers/gcc.json"
          echo "NPROCS=$(sysctl -n hw.ncpu)" >> $GITHUB_ENV
          cmake \
          -Bbuild-lint \
          -DAMR_WIND_ENABLE_MPI:BOOL=OFF \
          -DAMR_WIND_ENABLE_TESTS:BOOL=ON \
          -DAMR_WIND_TEST_WITH_FCOMPARE:BOOL=OFF \
          -DAMR_WIND_ENABLE_MASA:BOOL=OFF \
          -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON \
          ${{github.workspace}}
      - name: Check
        working-directory: build-lint
        run: |
          # Sanitize AMREX_GIT_VERSION define with 3 backslashes and quotes which cppcheck can't parse
          sed -i '' -e 's/\\\\\\"//g' compile_commands.json
          cppcheck --inline-suppr \
            --suppress=unmatchedSuppression --suppress=syntaxError --suppress=internalAstError \
            --std=c++14 --language=c++ --enable=all --project=compile_commands.json \
            -j ${{env.NPROCS}} -i ${{github.workspace}}/submods/amrex/Src \
            -i ${{github.workspace}}/submods/googletest --output-file=cppcheck.txt
      - name: Report
        working-directory: build-lint
        run: |
          # Might be wrong to assume cppcheck always reports issues using 3 lines
          WARNINGS_TMP=$(wc -l < cppcheck.txt | xargs echo -n)
          WARNINGS=$(bc <<< "$WARNINGS_TMP/3")
          printf "%s warnings\n" "${WARNINGS}" >> cppcheck.txt
          cat cppcheck.txt
          # Just report for now and don't fail
          #exit ${WARNINGS}
