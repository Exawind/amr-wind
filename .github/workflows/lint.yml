name: AMR-Wind Lint

on:
  push:
    branches: [main]
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'test/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/lint.yml'
  pull_request:
    branches: [main]
    paths:
      - 'cmake/**'
      - 'amr-wind/**'
      - 'submods/**'
      - 'test/**'
      - 'unit_tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/lint.yml'

jobs:
  cppcheck:
    runs-on: macos-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Dependencies
        run: brew install cppcheck
      - name: Configure
        run: |
          echo "NPROCS=$(sysctl -n hw.ncpu)" >> $GITHUB_ENV
          cmake \
          -Bbuild-cppcheck \
          -DAMR_WIND_ENABLE_MPI:BOOL=OFF \
          -DAMR_WIND_ENABLE_TESTS:BOOL=ON \
          -DAMR_WIND_TEST_WITH_FCOMPARE:BOOL=OFF \
          -DAMR_WIND_ENABLE_MASA:BOOL=OFF \
          -DAMR_WIND_ENABLE_CPPCHECK:BOOL=ON \
          ${{github.workspace}}
      - name: Check
        working-directory: build-cppcheck
        run: make cppcheck-ci
      - name: Full report
        working-directory: build-cppcheck
        run: cat cppcheck/cppcheck-full-report.txt
      - name: Short report
        working-directory: build-cppcheck
        run: |
          echo "::add-matcher::.github/problem-matchers/cppcheck.json"
          cat cppcheck-ci-report.txt
  clang-tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Dependencies
        run: |
          sudo apt-get install -y clang-tidy-9
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-9 100
      - name: Configure
        run: |
          echo "NPROCS=$(nproc)" >> $GITHUB_ENV
          cmake \
          -Bbuild-clang-tidy \
          -DCMAKE_CXX_COMPILER:STRING=clang++ \
          -DCMAKE_C_COMPILER:STRING=clang \
          -DAMR_WIND_ENABLE_MPI:BOOL=OFF \
          -DAMR_WIND_ENABLE_TESTS:BOOL=ON \
          -DAMR_WIND_TEST_WITH_FCOMPARE:BOOL=OFF \
          -DAMR_WIND_ENABLE_MASA:BOOL=OFF \
          -DAMR_WIND_ENABLE_ALL_WARNINGS:BOOL=OFF \
          -DAMR_WIND_ENABLE_CLANG_TIDY:BOOL=ON \
          ${{github.workspace}}
      - name: Check
        working-directory: build-clang-tidy
        run: |
          cmake --build . --parallel ${{env.NPROCS}} 2> clang-tidy-full-report.txt
          cat clang-tidy-full-report.txt | grep "warning:" | grep -v "submods" | sort | uniq | sort -nr | \
            awk 'BEGIN{i=0}{print $0}{i++}END{print "Warnings: "i}' > clang-tidy-ci-report.txt
      - name: Full report
        working-directory: build-clang-tidy
        run: cat clang-tidy-full-report.txt
      - name: Short report
        working-directory: build-clang-tidy
        run: |
          echo "::add-matcher::.github/problem-matchers/gcc.json"
          cat clang-tidy-ci-report.txt
